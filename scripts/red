#!/bin/zsh

if [ -z "$REDMINE_URL" -o -z "$REDMINE_TOKEN" ]; then
  echo "REDMINE_URL or REDMINE_TOKEN is not defined"
  exit 1
fi

# env values in ~/.zshrc_local
function issues() {
  curl -s "$REDMINE_URL/issues.json?key=$REDMINE_TOKEN&assigned_to_id=me&status_id=2" \
    | jq --raw-output '.issues[] | [ (.id|tostring), .project.name, .subject] | @tsv'
  curl -s "$REDMINE_URL/issues.json?key=$REDMINE_TOKEN&assigned_to_id=me&status_id=15" \
    | jq --raw-output '.issues[] | [ (.id|tostring), .project.name, .subject] | @tsv'
}

function branch() {
  is=$(issues|peco)

  if [ -z "$is" ]; then
    echo "no issues selected"
    exit
  fi

  id=$(echo $is | cut -f 1)
  desc=$(echo $is | cut -f 2-)

  if git checkout -b issue/$id; then
    echo "created: issue/$id"
    echo "    $desc"
  fi
}

function current() {
  br=$(git symbolic-ref --short HEAD)
  id=$(echo $br | cut -d "/" -f 2)

  curl -s "$REDMINE_URL/issues/$id.json?key=$REDMINE_TOKEN" \
    | jq --raw-output '.issue | "プロジェクト: \(.project.name)
タイトル    : \(.subject)
詳細        : \(.description)
担当者      : \(.assigned_to.name)
ステータス  : \(.status.name)
開始日      : \(.start_date)
期限        : \(.due_date)
"'
  echo "$REDMINE_URL/issues/$id"
}

function help() {
  cat <<MSG
  red subcommands

  Subcommands:
    is: show issues list
    br: select issue and create branch
    c:  show current issue
    h:  show this message
MSG
}

cmd=$1
case $1 in
  is) cmd=issues ;;
  br) cmd=branch ;;
  c) cmd=current ;;
  *) cmd=help ;;
esac

$cmd
