export PROJECT_DIR=$HOME/projects
export PATH=$PROJECT_DIR/bin:$PATH

export __wkon
function _update_workon() {
  echo $__wkon
}

# command: virtualenvwrapper like command
function workon () {
  wkon=
  if [ -f ./.pjrc ]; then
    source ./.pjrc
    wkon="RC"
  fi

  export __wkon="%F{green}[$wkon]%f"
  
  # Git workflow: cc/{current-branch} ブランチ作成と wip コミット
  if git rev-parse --git-dir > /dev/null 2>&1; then
    local current_branch=$(git rev-parse --abbrev-ref HEAD)
    local cc_branch="cc/${current_branch}"
    
    # cc/{current-branch} ブランチを作成（既存の場合は削除して再作成）
    git branch -D "${cc_branch}" 2>/dev/null
    git checkout -b "${cc_branch}"
    
    # 空のwipコミットを作成
    git commit --allow-empty -m "wip"
    
    # コミットハッシュを wip.head として git config に保存
    local wip_hash=$(git rev-parse HEAD)
    git config wip.head "${wip_hash}"
  fi
}

alias wo=workon


# メインのOrganizationやリポジトリへ移動する
function repod() {
  # PROJECT_MAIN_ORGが指定されていない場合は終了
  if [ -z "$PROJECT_MAIN_ORG" ]; then
    echo "PROJECT_MAIN_ORG is not specified"
    return 1
  fi

  # 引数がなければメインのOrganizationへ移動
  if [ -z "$1" ]; then
    cd $PROJECT_MAIN_ORG
    return
  fi

  # 引数ありの場合は PROJECT_MAIN_ORG/$1 へ移動
  cd $PROJECT_MAIN_ORG/$1
}

# repod の補完関数
function _repod() {
  if [ -z "$PROJECT_MAIN_ORG" ]; then
    return
  fi
  
  # PROJECT_MAIN_ORG 内のディレクトリ一覧を補完候補にする
  local directories
  directories=("${(@f)$(ls -d $PROJECT_MAIN_ORG/*/ 2>/dev/null | xargs -n1 basename)}")
  
  _arguments \
    '1:directory:('${directories[@]}')'
}

# repod コマンドの補完を設定
compdef _repod repod

