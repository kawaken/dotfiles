# vcs_infoを有効
autoload -Uz vcs_info

#zstyle ':vcs_info:*+*:*' debug true
zstyle ':vcs_info:*' enable hg git svn

# gitの設定
zstyle ':vcs_info:(hg*|git*):*' get-revision true
zstyle ':vcs_info:git:*' check-for-changes true

zstyle ':vcs_info:git:*' stagedstr "%F{green}*"
zstyle ':vcs_info:git:*' unstagedstr "%F{red}*"
zstyle ':vcs_info:git:*' formats '%F{white}(%s) [%F{cyan}%b%f]' '%c%u%f %m%f'
zstyle ':vcs_info:git:*' actionformats '%F{white}(%s) [%F{cyan}%b|%a%f]' '%c%u%f %m%f'

# set-messageのhook
zstyle ':vcs_info:git+set-message:*' hooks git-extra-info
function +vi-git-extra-info() {
  # work treeにいるか確認
  if [[ $(command git rev-parse --is-inside-work-tree 2> /dev/null) != 'true' ]]; then
    return 1
  fi

  if [[ "$1" != "1" ]]; then
    hook_com[branch]+=`check_git_remote`
    return 0
  fi

  hook_com[unstaged]+=`check_git_untracked`
  hook_com[misc]+="`count_git_st``check_git_user`"
}

function check_git_remote() {
  local ahead behind remote arrow
  local -a gitstatus

  # トラッキングブランチを確認
  remote=${$(git rev-parse --verify ${hook_com[branch]}@{upstream} \
    --symbolic-full-name 2>/dev/null)/refs\/remotes\/}

  if [[ -n ${remote} ]] ; then
    hostname=$(git ls-remote --get-url | cut -d: -f1 | cut -d@ -f2)

    arrow="-"
    # ローカルが進んでいたら 件数と -> を表示
    ahead=$(git rev-list ${hook_com[branch]}@{upstream}..HEAD 2>/dev/null | wc -l)
    (( $ahead )) && gitstatus+=( "%F{green}+${ahead}%f" ) && arrow+=">"

    # リモートが進んでいたら 件数と <- を表示
    behind=$(git rev-list HEAD..${hook_com[branch]}@{upstream} 2>/dev/null | wc -l)
    (( $behind )) && gitstatus+=( "%F{red}-${behind}%f" ) && arrow="<${arrow}"

    # local <-> remote 件数 のフォーマットで表示
    echo "%f${arrow}%F{cyan}${remote}(${hostname})%f${(j:/:)gitstatus}"
  fi
}

function check_git_untracked() {
  # untracked のファイルがあったら 黄色* を表示
  if [[ -n $(git ls-files --other --exclude-standard 2> /dev/null) ]]; then
    echo -e "%F{yellow}*"
  fi
}

function count_git_st() {
  # git status の種類別にカウントして表示
  git status -s | sort | awk '{ c[$1] += 1; } END{for (k in c) {printf "%s:%s ", k, c[k]}}'
}

function check_git_user() {
  domain=`git config user.email | cut -d'@' -f 2`
  echo "%F{magenta}${domain:0:2}%f"

}

# svnの設定
zstyle ':vcs_info:svn:*' branchformat '%b:r%r'
zstyle ':vcs_info:svn:*' formats '%F{white}(%s) [%F{cyan}%b%f]' '%u%f'
zstyle ':vcs_info:svn+set-message:*' hooks svn-extra-info
function +vi-svn-extra-info() {
  if [[ "$1" != "1" ]]; then
    return 0
  fi

  hook_com[unstaged]+=`count_svn_st`
}

function count_svn_st() {
  svn st | sort | awk '{ c[$1] += 1; } END{for (k in c) {printf "%s:%s ", k, c[k]}}'
}

function _update_vcs_info_msg() {
  local -a messages
  local prompt

  LANG=en_US.UTF-8 vcs_info

  if [[ -z ${vcs_info_msg_0_} ]]; then
    prompt=""
  else
    [[ -n "$vcs_info_msg_0_" ]] && messages+=( "${vcs_info_msg_0_}" )
    [[ -n "$vcs_info_msg_1_" ]] && messages+=( "${vcs_info_msg_1_}" )
    [[ -n "$vcs_info_msg_2_" ]] && messages+=( "${vcs_info_msg_2_}" )

    # 間にスペースを入れて連結する
    prompt="
${(j: :)messages}"
  fi

  echo "$prompt"
}
# vim: ft=zsh
