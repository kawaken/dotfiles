export PROJECT_DIR=$HOME/projects

function show_projects() {
  echo "\033[34mProjects list :\033[0m"
  ls $PROJECT_DIR
}
function move_project_directory() {
  cur_dir=`pwd`
  cd $PROJECT_DIR
  if [ ! -e $1 ]; then
    echo "$1 does not exist."
    cd $cur_dir

    return 1
  else
    cd $1

    return 0
  fi
}
# command: cd to project dir or ls project dir
function pjd() {
  if [ $# -eq 0 ]; then
    cd $PROJECT_DIR
    show_projects
  else
    move_project_directory $1
  fi
}
function gen_pjrc() {

  echo -n "which language? [go|node|java|python]: "
  read lang
  case $lang in
    go)
      cat <<'CMD' >> .pj_go_rc
export GOPATH=$PROJECT_DIR
export PATH=`pwd`/bin:$PROJECT_DIR/bin:$PATH
CMD
      ;;
    node)
      cat <<'CMD' >> .pj_node_rc
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
CMD
      ;;
    java)
      cat <<'CMD' >> .pj_java_rc
#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/Users/kekawano/.sdkman"
[[ -s "/Users/kekawano/.sdkman/bin/sdkman-init.sh" ]] && source "/Users/kekawano/.sdkman/bin/sdkman-init.sh"
CMD
      ;;
    python)
      cat <<'CMD' >> .pj_python_rc
source ./venv/bin/activate
CMD
      ;;
    *)
      vi .pjrc
  esac

}

function detect_lang() {
  echo -n $f | cut -d "_" -f 2
}

# command: virtualenvwrapper like command
function workon () {
  if [ $# -eq 1 ]; then
    move_project_directory $1
    if [ $? -eq 1 ]; then
      return 1
    fi
  fi

  wkon=
  if [ -f ./.pjrc ]; then
    source ./.pjrc
    wkon="RC"
  fi

  for f in `find . -maxdepth 1 -type f -name '.pj_*_rc'`; do
    wkon="${wkon} "$(detect_lang)
    source $f
  done

  export __wkon="%F{green}[$wkon]%f"
}

alias wo=workon

# vim: ft=zsh
