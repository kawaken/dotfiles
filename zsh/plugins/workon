export PROJECT_DIR=$HOME/projects
export PATH=$PROJECT_DIR/bin:$PATH

# command: cd to project dir or ls project dir
function pjd() {
  cd $PROJECT_DIR
  echo "\033[34mProjects list :\033[0m"
  ls $PROJECT_DIR
}

function gen_pjrc() {
  cat <<'CMD' >> .pjrc
# Describe the settings for the project
CMD
  vi .pjrc
}

function show_langs() {
  cat <<LANG
Node:   $(node --version)
Path:   $(which node)

Go:     $(go version)
GOROOT: $(go env GOROOT)
GOPATH: $(go env GOPATH)

Python: $(python3 --version)
Path:   $(which python3)
Poetry: $(poetry --version)
LANG
}

export __wkon
function _update_workon() {
  echo $__wkon
}

# command: virtualenvwrapper like command
function workon () {
  wkon=
  if [ -f ./.pjrc ]; then
    source ./.pjrc
    wkon="RC"
  fi

  show_langs
  export __wkon="%F{green}[$wkon]%f"
}

alias wo=workon


# メインのOrganizationやリポジトリへ移動する
function repod() {
  # PROJECT_MAIN_ORGが指定されていない場合は終了
  if [ -z "$PROJECT_MAIN_ORG" ]; then
    echo "PROJECT_MAIN_ORG is not specified"
    return 1
  fi

  # 引数がなければメインのOrganizationへ移動
  if [ -z "$1" ]; then
    cd $PROJECT_MAIN_ORG
    return
  fi

  # PROJECT_MAIN_ORG_PREFIX が指定されていない場合はそのまま移動
  if [ -z "$PROJECT_MAIN_ORG_PREFIX" ]; then
    cd $PROJECT_MAIN_ORG/$1
    return
  fi

  # ディレクトリが存在したら移動する
  local target_dir="$PROJECT_MAIN_ORG/${PROJECT_MAIN_ORG_PREFIX}-$1"
  if [ -d "$target_dir" ]; then
    cd "$target_dir"
    return
  fi

  # Prefixなしのディレクトリが存在したら移動する
  local target_dir="$PROJECT_MAIN_ORG/$1"
  if [ -d "$target_dir" ]; then
    cd "$target_dir"
    return
  fi

  echo "Directory not found: $target_dir"
  # PROJECT_MAIN_ORGに移動してディレクトリ一覧のみ表示する
  cd $PROJECT_MAIN_ORG
  ls
}

# cdコマンドの拡張
function cd() {
  # PROJECT_MAIN_ORGが指定されていない場合は通常のcdとして動作
  if [ -z "$PROJECT_MAIN_ORG" ]; then
    builtin cd "$@"
    return
  fi

  # 現在のディレクトリがPROJECT_MAIN_ORG配下でない場合は通常のcdとして動作
  if [[ "$(pwd)" != "$PROJECT_MAIN_ORG"* ]]; then
    builtin cd "$@"
    return
  fi

  # 引数がない場合は通常のcdとして動作
  if [ -z "$1" ]; then
    builtin cd "$@"
    return
  fi

  # 引数そのままのディレクトリが存在する場合は移動
  if [ -d "$1" ]; then
    builtin cd "$1"
    return
  fi

  # PROJECT_MAIN_ORG_PREFIXが指定されている場合
  if [ -n "$PROJECT_MAIN_ORG_PREFIX" ]; then
    local target_dir="${PROJECT_MAIN_ORG_PREFIX}-$1"
    if [ -d "$target_dir" ]; then
      builtin cd "$target_dir"
      return
    fi
  fi

  # どちらのディレクトリも見つからない場合は通常のcdとして動作
  builtin cd "$@"
}

