# 基本設定
bindkey -e
setopt auto_cd                       # ディレクトリ名だけで移動
setopt auto_pushd                    # 自動でpushdする、cdの履歴表示
setopt rm_star_silent                # rm * で削除確認しない(-iを付けてるので大丈夫)
setopt interactive_comments          # #以降をコメントとみなす

# 履歴関連
HISTFILE=~/.zsh_history
HISTSIZE=100000
SAVEHIST=100000
HISTTIMEFORMAT="[%Y/%M/%D %H:%M:%S] "
setopt hist_ignore_dups
setopt share_history
setopt extendedhistory
setopt hist_verify                   # 履歴から直接実行しない
setopt hist_no_store                 # historyコマンドは無視
bindkey "^R" history-incremental-search-backward
bindkey "^S" history-incremental-search-forward

# 表示設定
autoload colors
colors
zstyle ':completion:*' list-colors 'di=;34;1' 'ln=;35;1' 'so=;32;1' 'ex=31;1' 'bd=46;34' 'cd=43;34'
setopt print_eight_bit               # 補完時の日本語表示
setopt no_flow_control               # フローコントロールを無効(Ctrl+Sが使える)

# 補完関連
## 補完対象を増やす
fpath=($HOME/.zsh-completions/src /usr/local/share/zsh-completions $fpath)

autoload -U compinit
compinit
setopt nolistbeep                    # beep音を出さない
setopt list_packed                   # 表示を詰め込む
setopt magic_equal_subst             # =の後も補完する
unsetopt auto_remove_slash           # ディレクトリの末尾/を勝手に消さない

# ジョブ関連
REPORTTIME=30                        # 30秒以上かかったらtimeを出力
setopt long_list_jobs                # jobs -l をデフォルト

# プロンプト関連
setopt prompt_subst                  # 実行時の変数展開
setopt prompt_percent                # %記号使える
setopt transient_rprompt             # 最後のRPROMPTだけ表示

# hook を有効にする
autoload -Uz add-zsh-hook

# SSH接続の時の設定
if [ -n "${SSH_CONNECTION}" ]; then
    watch="all"                      # login/logout監視
    log                              # ターミナルに出力
    setopt ignore_eof                # Ctrl+Dでログアウトしない
fi

# dotfilesの場所を変数に設定
export MY_DOTFILES_DIR=$HOME/dotfiles
# エイリアスの読込
[[ -f $MY_DOTFILES_DIR/_alias ]] && source $MY_DOTFILES_DIR/_alias

# OSごとの設定読込
[[ -f $MY_DOTFILES_DIR/default.d/`uname`.zshrc ]] && source $MY_DOTFILES_DIR/default.d/`uname`.zshrc

# vcs関連の設定読込
[[ -f $MY_DOTFILES_DIR/zsh/vcs_info ]] && source $MY_DOTFILES_DIR/zsh/vcs_info

# プロンプト表示処理
function _update_pr_usr() {
  local prompt
  prompt="%n"
  if [ ${UID} -eq 0 ]; then
    # root だったら赤
    prompt="%F{red}%n%f"
  fi
  if [ -n "${SSH_CONNECTION}" ]; then
    # SSHだったら下線
    prompt="%U${prompt}%u"
  fi

  if [ $SHLVL -gt 1 ]; then
    # シェルの階層が増えると > を表示する
    local bc
    bc=$(($SHLVL - 1))
    prompt="$(printf '%.1s' '>'{1..$bc})$prompt"
  fi

  echo "$prompt"
}

function _update_rpr_host() {
  local prompt
  prompt="%m"
  if [ -n "${SSH_CONNECTION}" ]; then
    # SSHだったら太文字
    prompt="%B${HOST}%b"
  fi
  echo "$prompt"
}

function _update_prompt() {
  PR_FULLPATH="%F{yellow}%d%f"
  PR_PREV_RESULT="%(?,,%F{red}!!!%f )"
  PR_VCS=`_update_vcs_info_msg`
  PR_USR=`_update_pr_usr`
  PR_SEP="%(1j,%F{magenta}%#%f,%#)"

  PROMPT="
$PR_FULLPATH$PR_VCS
$PR_USR $PR_SEP $PR_PREV_RESULT"
  RPROMPT="`_update_rpr_host` %D{%Y-%m-%d %H:%M:%S}"
}
#TMOUT=1                              # ALRMシグナルの間隔
#TRAPALRM() {
  # プロンプトを更新
  #zle reset-prompt
#}
add-zsh-hook precmd _update_prompt

# 便利コマンド読込
for conf in $MY_DOTFILES_DIR/zsh/sources/*; do
	source ${conf};
done

# checkversion
(cd $MY_DOTFILES_DIR;scripts/check-update -v)

if [ -f $HOME/.zshrc_local ]; then
  source $HOME/.zshrc_local
fi

# vim: ft=zsh
